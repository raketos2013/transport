@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model IEnumerable<FileManager.Domain.Entity.TaskGroupEntity>
@{
    ViewData["Title"] = "Задачи";
}

<div class="container-fluid" style="padding-left: 0px; padding-right: 0px;">

    <div class="modal fade" id="modalCopyTask" data-bs-backdrop="static"
         data-bs-keyboard="false" tabindex="-1"
         aria-labelledby="modalCopyTaskLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <form method="post" class="modal-content" asp-action="CopyTask" asp-controller="Task">

                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabelCopy">Копирование задачи</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick=""></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-auto">
                            <input name="idTask" type="text" readonly class="form-control-plaintext" id="copyIdTask">
                        </div>
                        <div class="col-auto">
                            <input name="newIdTask" type="text" class="form-control" id="newTaskId" placeholder="новая задача">
                        </div>
                    </div>

                    <div class="form-check form-switch">
                        <label class="form-check-label">
                            Копировать Шаги
                            <input name="isCopySteps" id="isCopySteps" type="checkbox" class="form-check-input" onclick="ShowCopySteps()" />
                        </label>
                    </div>
                    <div id="copySteps" style="display: none;">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="">Отмена</button>
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal" onclick="">Ок</button>
                </div>
            </form>






        </div>
    </div>

    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="CancelOnOffTask()"></button>
                </div>
                <div class="modal-body">
                    <p><span id="titleInfo"></span> задачу <span id="idTaskInfo"></span> ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="CancelOnOffTask()">Отмена</button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="OkOnOffTask()">Ок</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="staticBackdropCopy" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabelCopy" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabelCopy">Новая группа задач</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearNewGroup()"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label">Название группы</label>
                        <input class="form-control" id="nameNewGroup" />
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="clearNewGroup()">Отмена</button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="createGroup()">Ок</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modalDeleteGroup" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="labelModalDeleteGroup" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="labelModalDeleteGroup">Удалить группу <span id="nameDeleteGroup"></span> ?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearNewGroup()"></button>
                </div>
                <div class="modal-body">
                    <p>
                        Задачи будут перенесены в общую группу
                    </p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="clearNewGroup()">Отмена</button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="deleteTaskGroup()">Ок</button>
                </div>
            </div>
        </div>
    </div>


    <div class="mainDiv">
        <div class="listGroups d-flex flex-column align-items-stretch flex-shrink-0 padding-top-container" style="width: 15%;">

            <div class="list-group list-group-flush scrollarea" style="max-height: 85vh;">
                <div class="row justify-content-between" style="margin-right: 0px;">
                    <div class="col-11" style="padding-left: 20px; border-bottom: solid 1px black;">
                        <h6><b>Группы задач</b></h6>
                    </div>
                    <div class="col-1 p-0">
                        <a class="btn p-0" data-bs-toggle="modal" data-bs-target="#staticBackdropCopy">
                            <img id="btn-add-group-task" src="~/images/add_icon.png" />
                        </a>

                    </div>
                </div>




                <table class="tabl1">
                    <tr class="list-group-item py-3 lh-tight " onclick="foo('Все')">
                        <td>
                            <div class="col-11">
                                <span>Все</span>
                            </div>
                        </td>
                        <td style="display: none;">
                        </td>
                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr class="list-group-item py-3 lh-tight " onclick="foo('@item.Name')">
                            <td>
                                <div class="col-11">
                                    <span>@item.Name</span>
                                </div>
                            </td>
                            <td style="display: none;">
                                @if (item.Name != "Без группы" && item.Name != "Все")
                                {
                                    <div class="col-1">
                                        <a data-bs-toggle="modal" data-bs-target="#modalDeleteGroup" onclick="modalDelete('@item.Id', '@item.Name')">
                                            <img src="~/images/delete_icon.png" alt="Удалить" title="Удалить" />
                                        </a>
                                    </div>
                                }
                            </td>
                        </tr>
                    }

                </table>

            </div>
        </div>


        <div class="b-example-divider scrollarea padding-top-container" id="tasks">
        </div>


    </div>
</div>


<script>

    var selectGroup = "Все";

    window.addEventListener('load', () => {
        var firstGroup = document.querySelectorAll("tbody tr");
        firstGroup[0].classList.add('selected-row');

        foo(selectGroup);
        func();

    });

    var trs = document.querySelectorAll("tbody tr");
    for (var i = 0; i < trs.length; i++) {
        MakeRowHover(trs[i], i);
    }

    function MakeRowHover(row, numRow) {
        row.addEventListener("click", function (numRow) {
            selectedTask = 0;
            //this.style.backgroundColor = "silver";
            let td = this.querySelectorAll('td');
            for (var i = 0; i < trs.length; i++) {
                td[1].style.display = 'block';
                trs[i].classList.add('selected-row');
            }
            for (var i = 0; i < trs.length; i++) {
                if (trs[i] != this) {
                    td = trs[i].querySelectorAll('td');
                    td[1].style.display = 'none';
                    trs[i].classList.remove('selected-row');
                }
            }
        });


    }





    function func() {

        window.progressID = setInterval(f1, 10000);
    }
    function f1() {
        foo(selectGroup);
    }
    function foo(group) {
        selectGroup = group
        document.cookie = "selectedTaskGroup=" + group;
        $.ajax({
            method: 'POST',
            url: '@Url.Action("TasksList", "Task")',
            data: { "taskGroup": group },
            dataType: 'html',
            success: function (result) {
                $('#tasks').empty();
                $('#tasks').append(result);
            }
        });
    }

    function createGroup() {
        var newGroup = document.getElementById("nameNewGroup").value;
        if (newGroup != "" & newGroup[0] != " ") {
            $.ajax({
                method: 'POST',
                url: '@Url.Action("CreateTaskGroup", "Task")',
                data: { "nameGroup": newGroup },
                dataType: 'html',
                success: function (result) {
                    window.location.href = '@Url.Action("Tasks", "Task")'
                }
            });
        }
        clearNewGroup();
    }
    var idDeleteGroup;
    function deleteTaskGroup() {
        var nameGroup = document.getElementById("nameDeleteGroup").innerText;
        $.ajax({
            method: 'POST',
            url: '@Url.Action("DeleteTaskGroup", "Task")',
            data: { "idDeleteGroup": idDeleteGroup },
            dataType: 'html',
            success: function (result) {
                window.location.href = '@Url.Action("Tasks", "Task")'
            }
        });
    }

    function clearNewGroup() {
        document.getElementById("nameNewGroup").value = '';
    }

    function modalDelete(id, name) {
        document.getElementById("nameDeleteGroup").innerText = name;
        idDeleteGroup = id;
    }

    function detailsTask(taskId) {
        location.href = "@Url.Action("TaskDetails", "Task", new { taskId = "cid" })".replace("cid", taskId.toString());
    }


    function OnOffTask(id) {

        // Объявить переменные
        var table, tr, td, i, txtValue, valueCheck;

        table = document.getElementById("tableTasks");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.innerText;
                if (txtValue == id) {
                    var qwe = tr[i].getElementsByTagName("td")[7];
                    var chl1 = qwe.firstElementChild.firstElementChild.firstElementChild.checked;

                }
            }
        }
        if (chl1 == true) {
            document.getElementById('titleInfo').innerText = "Включить";
        } else {
            document.getElementById('titleInfo').innerText = "Выключить";
        }
        document.getElementById('idTaskInfo').innerText = id;
    }


    function OkOnOffTask() {
        var id = document.getElementById('idTaskInfo').innerText
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ActivatedTask", "Task")',
            data: { "id": id },
            dataType: 'html',
            success: function (result) {
                f1();
            }
        });

    }
    function CancelOnOffTask() {
        var table, tr, td, i, txtValue, valueCheck;

        table = document.getElementById("tableTasks");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.innerText;
                if (txtValue == document.getElementById('idTaskInfo').innerText) {
                    var qwe = tr[i].getElementsByTagName("td")[7];
                    qwe.firstElementChild.firstElementChild.firstElementChild.checked = !qwe.firstElementChild.firstElementChild.firstElementChild.checked;

                }
            }
        }

    }


    function CopySteps() {
        document.getElementById('copyIdTask').value = idSelectedTask;

       
    }

    function ShowCopySteps() {
         $.ajax({
            method: 'POST',
            url: '@Url.Action("StepsForCopy", "Task")',
            data: { "taskId": idSelectedTask },
            dataType: 'html',
            success: function (result) {
                $('#copySteps').empty();
                $('#copySteps').append(result);
            }
        });

        var st = document.getElementById('isCopySteps');
        if (st.checked) {
            document.getElementById('copySteps').style.display = 'block';
        } else {
            document.getElementById('copySteps').style.display = 'none';
        }
    }

</script>