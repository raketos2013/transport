@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model IEnumerable<FileManager.Domain.Entity.TaskGroupEntity>
@{
    ViewData["Title"] = "Задачи";
}

<div class="container-fluid" style="padding-left: 0px; padding-right: 0px;">

	<div class="modal fade" id="staticBackdropCopy" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabelCopy" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="staticBackdropLabelCopy">Новая группа задач</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearNewGroup()"></button>
				</div>
				<div class="modal-body">
					<div class="form-group">
						<label class="control-label">Название группы</label>
						<input class="form-control" id="nameNewGroup" />
					</div>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="clearNewGroup()">Отмена</button>
					<button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="createGroup()">Ок</button>
				</div>
			</div>
		</div>
	</div>

	<div class="modal fade" id="modalDeleteGroup" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="labelModalDeleteGroup" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="labelModalDeleteGroup">Удалить группу <span id="nameDeleteGroup"></span> ?</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearNewGroup()"></button>
				</div>
				<div class="modal-body">
					<p>
						Задачи будут перенесены в общую группу
					</p>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
					<button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="deleteGroup()">Ок</button>
				</div>
			</div>
		</div>
	</div>


	<div class="mainDiv">
		<div class="listGroups d-flex flex-column align-items-stretch flex-shrink-0 padding-top-container" style="width: 15%;">

			<div class="list-group list-group-flush scrollarea" style="max-height: 85vh;">
				<div class="row justify-content-between" style="margin-right: 0px;">
					<div class="col-11" style="padding-left: 20px; border-bottom: solid 1px black;">
						<h6><b>Группы задач</b></h6>
					</div>
					<div class="col-1 p-0">
						<a class="btn p-0" data-bs-toggle="modal" data-bs-target="#staticBackdropCopy">
							<img id="btn-add-group-task" src="~/images/add_icon.png" />
						</a>

					</div>
				</div>


				

				<table class="tabl1">
					
						@foreach (var item in Model)
						{
							<tr class="list-group-item py-3 lh-tight " onclick="foo('@item.Name')">
								<td>
									<div class="col-11">
										<span>@item.Name</span>
									</div>
								</td>
								<td style="display: none;">
									@if (item.Name != "Без группы" && item.Name != "Все")
									{
										<div class="col-1">
											<a data-bs-toggle="modal" data-bs-target="#modalDeleteGroup" onclick="modalDelete('@item.Id', '@item.Name')">
												<img src="~/images/delete_icon.png" alt="Удалить" title="Удалить" />
											</a>
										</div>
									}
								</td>
							</tr>
						}
					
				</table>

			</div>
		</div>

		<div class="b-example-divider scrollarea padding-top-container" id="tasks">
		</div>
	</div>
</div>


<script>
	var selectGroup = "Все";
	window.addEventListener('load', () => {
		var firstGroup = document.querySelectorAll("tbody tr");
		firstGroup[0].classList.add('selected-row');
		

		foo(selectGroup);
		func();


	});

	var trs = document.querySelectorAll("tbody tr");
	for (var i = 0; i < trs.length; i++) {
		MakeRowHover(trs[i], i);
	}

	function MakeRowHover(row, numRow) {
		row.addEventListener("click", function (numRow) {
			//this.style.backgroundColor = "silver";
			let td = this.querySelectorAll('td');
			for (var i = 0; i < trs.length; i++) {
				td[1].style.display = 'block';
				trs[i].classList.add('selected-row');
			}
			for (var i = 0; i < trs.length; i++) {
				if (trs[i] != this) {
					td = trs[i].querySelectorAll('td');
					td[1].style.display = 'none';
					trs[i].classList.remove('selected-row');
				}
			}
		});
		

	}




	
	function func() {
		
		window.progressID = setInterval(f1, 10000);
	}
	function f1() {
		foo(selectGroup);
	}
	function foo(group) {
		selectGroup = group
		$.ajax({
			method: 'POST',
			url: '@Url.Action("TasksList", "Task")',
			data: { "taskGroup": group },
			dataType: 'html',
			success: function (result) {
				$('#tasks').empty();
				$('#tasks').append(result);
			}
		});
	}

	function createGroup() {
		var newGroup = document.getElementById("nameNewGroup").value;
		if (newGroup != "" & newGroup[0] != " ") {
			$.ajax({
				method: 'POST',
				url: '@Url.Action("CreateTaskGroup", "Home")',
				data: { "nameGroup": newGroup },
				dataType: 'html',
				success: function (result) {
					window.location.href = '@Url.Action("Tasks", "Task")'
				}
			});
		}
		clearNewGroup();
	}
	var idDeleteGroup;
	function deleteGroup() {
		var nameGroup = document.getElementById("nameDeleteGroup").innerText;
		$.ajax({
			method: 'POST',
			url: '@Url.Action("DeleteGroup", "Home")',
			data: { "id": idDeleteGroup },
			dataType: 'html',
			success: function (result) {
				window.location.href = '@Url.Action("Index", "Home")'
			}
		});
	}

	function clearNewGroup() {
		document.getElementById("nameNewGroup").value = '';
	}

	function modalDelete(id, name) {
		document.getElementById("nameDeleteGroup").innerText = name;
		idDeleteGroup = id;
	}

	function detailsTask(taskId) {
		location.href = "@Url.Action("TaskDetails", "Task", new { taskId = "cid" })".replace("cid", taskId.toString());
	}



</script>